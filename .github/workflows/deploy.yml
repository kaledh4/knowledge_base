name: Deploy to Appwrite

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Python for Functions
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install trafilatura yt-dlp
    
    - name: Build Next.js Application
      run: npm run build
      env:
        VITE_APPWRITE_ENDPOINT: ${{ secrets.VITE_APPWRITE_ENDPOINT }}
        VITE_APPWRITE_PROJECT_ID: ${{ secrets.VITE_APPWRITE_PROJECT_ID }}
        VITE_APPWRITE_DATABASE_ID: ${{ secrets.VITE_APPWRITE_DATABASE_ID }}
        VITE_APPWRITE_COLLECTION_ID: ${{ secrets.VITE_APPWRITE_COLLECTION_ID }}
        VITE_APPWRITE_SCRAPE_FUNCTION_ID: ${{ secrets.VITE_APPWRITE_SCRAPE_FUNCTION_ID }}
        VITE_APPWRITE_MCP_FUNCTION_ID: ${{ secrets.VITE_APPWRITE_MCP_FUNCTION_ID }}
    
    - name: Deploy to Appwrite
      run: npm run deploy
      env:
        APPWRITE_ENDPOINT: ${{ secrets.APPWRITE_ENDPOINT }}
        APPWRITE_PROJECT_ID: ${{ secrets.APPWRITE_PROJECT_ID }}
        APPWRITE_API_KEY: ${{ secrets.APPWRITE_API_KEY }}
        APPWRITE_DATABASE_ID: ${{ secrets.APPWRITE_DATABASE_ID }}
        APPWRITE_COLLECTION_ID: ${{ secrets.APPWRITE_COLLECTION_ID }}
    
    - name: Deploy Frontend
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/master'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./out
        cname: your-domain.com  # Optional: Add your custom domain